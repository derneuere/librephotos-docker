apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "librephotos.frontend.fullname" . }}
  labels:
    {{- include "librephotos.frontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.frontend.autoscaling.enabled }}
  replicas: {{ .Values.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "librephotos.frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.frontend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "librephotos.frontend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "librephotos.backend.fullname" . }}
  labels:
    {{- include "librephotos.backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "librephotos.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "librephotos.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.backend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8001
              protocol: TCP
          env:
            - name: BACKEND_HOST
              value: "{{ .Values.env.BACKEND_HOST }}"
            - name: DEBUG
              value: "{{ .Values.env.DEBUG }}"
            - name: ADMIN_USERNAME
              value: "{{ .Values.env.ADMIN_USERNAME }}"
            - name: ADMIN_EMAIL
              value: "{{ .Values.env.ADMIN_EMAIL }}"
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: ADMIN_PASSWORD
                  name: {{ include "librephotos.backend.fullname" . }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: SECRET_KEY
                  name: {{ include "librephotos.backend.fullname" . }}
            - name: DB_BACKEND
              value: postgresql
            - name: DB_NAME
              value: "{{ .Values.postgresql.postgresql.database }}"
            - name: DB_USER
              value: "{{ .Values.postgresql.postgresql.username }}"
            - name: DB_PASS
              value: "{{ .Values.postgresql.postgresql.password }}"
            - name: DB_HOST
              {{- if .Values.postgresql.enabled }}
              value: {{ include "call-nested" (list . "postgresql" "postgresql.fullname") }}
              {{- else }}
              value: "{{ .Values.postgresql.externalPostgresHost }}"
              {{- end }}
            - name: DB_PORT
              {{- if .Values.postgresql.enabled }}
              value: "5432"
              {{- else }}
              value: "{{ .Values.postgresql.externalPostgresqlPort }}"
              {{- end }}
            - name: REDIS_HOST
              {{- if .Values.redis.enabled }}
              value: {{ include "call-nested" (list . "redis" "redis.fullname") }}
              {{- else }}
              value: "{{ .Values.postgresql.externalRedisHost }}"
              {{- end }}
            - name: REDIS_PORT
              {{- if .Values.redis.enabled }}
              value: "6379"
              {{- else }}
              value: "{{ .Values.postgresql.externalRedisPort }}"
              {{- end }}
            - name: MAPBOX_API_KEY
              value: "{{ .Values.env.MAPBOX_API_KEY }}"
            - name: TIME_ZONE
              value: "{{ .Values.env.TIME_ZONE }}"
            - name: WEB_CONCURRENCY
              value: "{{ .Values.env.WEB_CONCURRENCY }}"
            - name: SKIP_PATTERNS
              value: "{{ .Values.env.SKIP_PATTERNS }}"
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 120
            periodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 120
            periodSeconds: 60
          volumeMounts:
          - mountPath: /data
            name: storage
            subPath: storage
          - mountPath: /protected_media
            name: storage
            subPath: protected_media
          - mountPath: /logs
            name: storage
            subPath: logs
          - mountPath: /root/.cache
            name: storage
            subPath: cache
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: storage
        {{- if .Values.backend.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.backend.persistence.existingClaim }}{{ .Values.backend.persistence.existingClaim }}{{- else }}{{ template "librephotos.backend.fullname" . }}{{- end }}
        {{- else }}
        emptyDir: {}
        {{- end }}
